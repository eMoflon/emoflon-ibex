/*
 * generated by Xtext
 */
package org.moflon.tgg.mosl;

import java.util.Map;

import org.eclipse.emf.common.util.DiagnosticChain;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EStructuralFeature;
import org.eclipse.emf.ecore.util.EObjectValidator;
import org.eclipse.xtext.scoping.IScopeProvider;
import org.moflon.tgg.mosl.scoping.TGGScopeProvider;

import com.google.inject.Binder;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
public class TGGRuntimeModule extends org.moflon.tgg.mosl.AbstractTGGRuntimeModule
{

   @Override
   public Class<? extends IScopeProvider> bindIScopeProvider()
   {
      return TGGScopeProvider.class;
   }

   @Override
   public void configure(final Binder binder)
   {
      super.configure(binder);
   }

   // Temporarily solution issue #781 (EObjectValidator has been switched off completely :-))
   @Override
   public org.eclipse.emf.ecore.EValidator.Registry bindEValidatorRegistry()
   {
      org.eclipse.emf.ecore.EValidator.Registry registry = super.bindEValidatorRegistry();
      return registry;
   }
   

   private final class NonRequiredFeatureValidatingValidator extends EObjectValidator
   {
      @Override
      protected boolean validate_MultiplicityConforms(EObject eObject, EStructuralFeature eStructuralFeature, DiagnosticChain diagnostics,
            Map<Object, Object> context)
      {
         return true;
      }
   }
}
